{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/projects/nextjs-starter-blog/pages/post/[slug].js\";\nimport Link from \"next/link\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport Layout from \"components/Layout\";\nimport Image from \"components/Image\";\nimport SEO from \"components/Seo\";\nimport { getPostBySlug, getPostsSlugs } from \"utils/posts\";\nimport Bio from \"components/Bio\";\n\nconst CodeBlock = ({\n  language,\n  value\n}) => {\n  return /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n    language: language,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n};\n\nconst MarkdownImage = ({\n  alt,\n  src\n}) => /*#__PURE__*/_jsxDEV(Image, {\n  alt: alt,\n  src: require(`../../content/assets/${src}`),\n  webpSrc: require(`../../content/assets/${src}?webp`),\n  previewSrc: require(`../../content/assets/${src}?lqip`),\n  className: \"w-full\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n\nexport default function Post({\n  post,\n  frontmatter,\n  nextPost,\n  previousPost\n}) {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(SEO, {\n      title: frontmatter.title,\n      description: frontmatter.description || post.excerpt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mb-2 text-6xl font-black leading-none font-display\",\n          children: frontmatter.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm\",\n          children: frontmatter.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        className: \"mb-4 prose-sm prose sm:prose lg:prose-lg\",\n        escapeHtml: false,\n        source: post.content,\n        renderers: {\n          code: CodeBlock,\n          image: MarkdownImage\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"mt-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(Bio, {\n          className: \"mt-8 mb-16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"flex flex-wrap justify-between mb-10\",\n      children: [previousPost ? /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/post/[slug]\",\n        as: `/post/${previousPost.slug}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"text-lg font-bold\",\n          children: [\"\\u2190 \", previousPost.frontmatter.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), nextPost ? /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/post/[slug]\",\n        as: `/post/${nextPost.slug}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"text-lg font-bold\",\n          children: [nextPost.frontmatter.title, \" \\u2192\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticPaths() {\n  const paths = getPostsSlugs();\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params: {\n    slug\n  }\n}) {\n  const postData = getPostBySlug(slug);\n\n  if (!postData.previousPost) {\n    postData.previousPost = null;\n  }\n\n  if (!postData.nextPost) {\n    postData.nextPost = null;\n  }\n\n  return {\n    props: postData\n  };\n}","map":{"version":3,"sources":["/mnt/c/projects/nextjs-starter-blog/pages/post/[slug].js"],"names":["Link","ReactMarkdown","Prism","SyntaxHighlighter","Layout","Image","SEO","getPostBySlug","getPostsSlugs","Bio","CodeBlock","language","value","MarkdownImage","alt","src","require","Post","post","frontmatter","nextPost","previousPost","title","description","excerpt","date","content","code","image","slug","getStaticPaths","paths","fallback","getStaticProps","params","postData","props"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\n\nimport Layout from \"components/Layout\";\nimport Image from \"components/Image\";\nimport SEO from \"components/Seo\";\nimport { getPostBySlug, getPostsSlugs } from \"utils/posts\";\nimport Bio from \"components/Bio\";\n\nconst CodeBlock = ({ language, value }) => {\n  return <SyntaxHighlighter language={language}>{value}</SyntaxHighlighter>;\n};\n\nconst MarkdownImage = ({ alt, src }) => (\n  <Image\n    alt={alt}\n    src={require(`../../content/assets/${src}`)}\n    webpSrc={require(`../../content/assets/${src}?webp`)}\n    previewSrc={require(`../../content/assets/${src}?lqip`)}\n    className=\"w-full\"\n  />\n);\n\nexport default function Post({ post, frontmatter, nextPost, previousPost }) {\n  return (\n    <Layout>\n      <SEO\n        title={frontmatter.title}\n        description={frontmatter.description || post.excerpt}\n      />\n\n      <article>\n        <header className=\"mb-8\">\n          <h1 className=\"mb-2 text-6xl font-black leading-none font-display\">\n            {frontmatter.title}\n          </h1>\n          <p className=\"text-sm\">{frontmatter.date}</p>\n        </header>\n        <ReactMarkdown\n          className=\"mb-4 prose-sm prose sm:prose lg:prose-lg\"\n          escapeHtml={false}\n          source={post.content}\n          renderers={{ code: CodeBlock, image: MarkdownImage }}\n        />\n        <hr className=\"mt-4\" />\n        <footer>\n          <Bio className=\"mt-8 mb-16\" />\n        </footer>\n      </article>\n      <nav className=\"flex flex-wrap justify-between mb-10\">\n        {previousPost ? (\n          <Link href={\"/post/[slug]\"} as={`/post/${previousPost.slug}`}>\n            <a className=\"text-lg font-bold\">\n              ← {previousPost.frontmatter.title}\n            </a>\n          </Link>\n        ) : (\n          <div />\n        )}\n        {nextPost ? (\n          <Link href={\"/post/[slug]\"} as={`/post/${nextPost.slug}`}>\n            <a className=\"text-lg font-bold\">{nextPost.frontmatter.title} →</a>\n          </Link>\n        ) : (\n          <div />\n        )}\n      </nav>\n    </Layout>\n  );\n}\n\nexport async function getStaticPaths() {\n  const paths = getPostsSlugs();\n\n  return {\n    paths,\n    fallback: false,\n  };\n}\n\nexport async function getStaticProps({ params: { slug } }) {\n  const postData = getPostBySlug(slug);\n\n  if (!postData.previousPost) {\n    postData.previousPost = null;\n  }\n\n  if (!postData.nextPost) {\n    postData.nextPost = null;\n  }\n\n  return { props: postData };\n}\n"]},"metadata":{},"sourceType":"module"}